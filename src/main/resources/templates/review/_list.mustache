<div id="review-list">
    {{#reviewForm}}
        <div class="card m-2" id="review-{{reviewId}}">
            <div class="card-header">
                {{reviewAuthorId}}
                <button type="button"
                        class="btn btn-sm btn-outline-primary"
                        data-bs-toggle="modal"
                        data-bs-target="#review-edit-modal"
                        data-bs-reviewId="{{reviewId}}"
                        data-bs-reviewAuthorId="{{reviewAuthorId}}"
                        data-bs-reviewContent="{{reviewContent}}"
                        data-bs-recipe-recipeId="{{recipeId}}">수정</button>
                <button type="button" class="btn btn-sm btn-outline-danger review-delete-btn" data-review-reviewId="{{reviewId}}">삭제</button>
            </div>
            <div class="card-body">
                {{reviewContent}}
            </div>
            <div class="card-create">
                {{reviewCreatedAt}}
            </div>
            <div class="card-update">
                {{reviewUpdatedAt}}
            </div>
        </div>
    {{/reviewForm}}
</div>

<div class="modal fade" id="review-edit-modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title" id="exampleModalLabel">댓글 수정</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="mb-3">
                        <label class="form-label">{{#reviewForm}}{{reviewAuthorId}}{{/reviewForm}}</label>
<!--                        <input type="text" class="form-control" id="edit-review-reviewAuthorId">-->
                        <input type="hidden" id="edit-review-reviewAuthorId" value="{{#reviewForm}}{{reviewAuthorId}}{{/reviewForm}}">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">댓글 내용</label>
                        <textarea type="text" class="form-control" rows="3" id="edit-review-reviewContent"></textarea>
                    </div>
                    <input type="hidden" id="edit-review-reviewId">
                    <input type="hidden" id="edit-review-recipe-recipeId">
                    <button type="button" class="btn btn-primary" id="review-update-btn">수정완료</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    const reviewEditModal = document.querySelector("#review-edit-modal");
    reviewEditModal.addEventListener("show.bs.modal", function (event) {
        const triggerBtn = event.relatedTarget;
        const reviewId = triggerBtn.getAttribute("data-bs-reviewId");
        const reviewAuthorId = triggerBtn.getAttribute("data-bs-reviewAuthorId");
        const reviewContent = triggerBtn.getAttribute("data-bs-reviewContent");
        const recipeId = triggerBtn.getAttribute("data-bs-recipe-recipeId");
        document.querySelector("#edit-review-reviewAuthorId").value = reviewAuthorId;
        document.querySelector("#edit-review-reviewContent").value = reviewContent;
        document.querySelector("#edit-review-reviewId").value = reviewId;
        document.querySelector("#edit-review-recipe-recipeId").value = recipeId;
    });
</script>

<script>
    const reviewUpdateBtn = document.querySelector("#review-update-btn");
    reviewUpdateBtn.addEventListener("click", function () {
        const review = {
            reviewId: document.querySelector("#edit-review-reviewId").value,
            reviewAuthorId: document.querySelector("#edit-review-reviewAuthorId").value,
            reviewContent: document.querySelector("#edit-review-reviewContent").value,
            recipeId: document.querySelector("#edit-review-recipe-recipeId").value
        };
        console.log(review);
        const url = "/api/review/" + review.reviewId;
        fetch(url, {
            method: "PATCH",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(review)
        }).then(response => {
            const msg = (response.ok) ? "댓글이 수정됐습니다." : "댓글 수정 실패..!";
            alert(msg);
            window.location.reload();
        });
    });
</script>

<script>
    const reviewDeleteBtns = document.querySelectorAll(".review-delete-btn");
    reviewDeleteBtns.forEach(btn => {
        btn.addEventListener("click", (event) => {
            const reviewDeleteBtns = event.target;
            const reviewId = reviewDeleteBtns.getAttribute("data-review-reviewId");
            console.log(`삭제 버튼 클릭: ${reviewId}번 댓글`);
            const url = `/api/review/${reviewId}`;
            fetch(url, {
                method: "DELETE"
            }).then(response => {
                if (!response.ok) {
                    alert("댓글 삭제 실패..!");
                    return;
                }
                const target = document.querySelector(`#review-${reviewId}`);
                target.reviewState=0;
                target.remove();
                const msg = `${reviewId}번 댓글을 삭제했습니다.`;
                alert(msg);
                window.location.reload();
            });
        });
    });
</script>